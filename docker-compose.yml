version: "3"

services:
  app:
    build:
      context: .
    expose:
      - 8000
      - 8001
    volumes:
      - ./app:/app
      - static_volume:/app/staticfiles
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py collectstatic --no-input --clear &&
             gunicorn --bind 0.0.0.0:8000 app.wsgi:application --daemon && 
             daphne -b 0.0.0.0 -p 8001 app.asgi:application"
    environment:
      - DB_HOST=db
      - DB_NAME=app
      - DB_USER=postgres
      - DB_PASS=somethingsecretpassword
      - REDIS_HOST=redis
      - DJANGO_SETTINGS_MODULE=app.production.settings
      - DJANGO_ALLOW_ASYNC_UNSAFE=True
      - DEBUG=False
    networks:
      - net
    depends_on:
      - db

  db:
    image: postgres:12-alpine
    environment:
      - POSTGRES_DB=app
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=somethingsecretpassword
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    expose:
      - 5432
    networks:
      - net

  
  redis:
    image: redis:5-alpine

  nginx:
    build: ./nginx
    ports:
      - 80:80
      - 9000:9000
    volumes:
      - static_volume:/app/staticfiles
    networks:
      - net
    depends_on:
      - app


networks:
  net:

volumes:
  postgres_data:
  static_volume:
